# 计划排程DEMO2
# 使用OVRPDPTW

from pprint import pprint

import pandas as pd

from modules.or_utils import DailyScheme

data = {
    "date": "2023-11-03",
    "depot_id": 35,  # 济宁翰蓝充装站
    "demand_ids": [39, 34, 15],  # 济宁鲁宝食品, 济宁樱园熟食二厂, 济宁樱园食品饲料厂
    "veh_ids": [
        1719969010584489985, 1716627668554846209, 1717116321680953346,  # 1716341736454852609,
        # 1716626450889674754,#, 1716341416853082114, 1716627333035692034, 1716341565876703234,
    ],
    "tank_ids": [
        96, 94, 88, 86, 85, 78, 76, 75, 73,  # 71,# 87, 83, 82, 81, 80, 77, 72,
    ],
    "gps": {
        35: (35.53413252053663, 116.64023798877453),
        39: (35.70321916096905, 116.47236493612012),
        34: (35.56215215579824, 116.65554392604493),
        15: (35.560005057326194, 116.66165919934456),
    },
    "pred": {
        39: {
            'demand': 14.88,
            'inst_flow': pd.DataFrame(
                data=[
                    0.0, 0.0, 0.0, 0.0, 0.0, 0.00666667, 1.15644444, 1.32618056, 1.17113889, 1.00065278, 1.20231944,
                    1.17561111, 1.21491643, 1.36130556, 1.20170833, 1.36595833, 1.26990278, 1.18519444, 0.24654167, 0.0,
                    0.0, 0.0, 0.0, 0.0,
                ],
                index=pd.DatetimeIndex(
                    [
                        '2023-11-03 00:00:00', '2023-11-03 01:00:00', '2023-11-03 02:00:00', '2023-11-03 03:00:00',
                        '2023-11-03 04:00:00', '2023-11-03 05:00:00', '2023-11-03 06:00:00', '2023-11-03 07:00:00',
                        '2023-11-03 08:00:00', '2023-11-03 09:00:00', '2023-11-03 10:00:00', '2023-11-03 11:00:00',
                        '2023-11-03 12:00:00', '2023-11-03 13:00:00', '2023-11-03 14:00:00', '2023-11-03 15:00:00',
                        '2023-11-03 16:00:00', '2023-11-03 17:00:00', '2023-11-03 18:00:00', '2023-11-03 19:00:00',
                        '2023-11-03 20:00:00', '2023-11-03 21:00:00', '2023-11-03 22:00:00', '2023-11-03 23:00:00',
                    ], dtype='datetime64[ns]', name='date'),
                columns=['value'],
            ),
        },
        34: {
            'demand': 1.68,
            'inst_flow': pd.DataFrame(
                data=[
                    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00028169, 0.19786885, 0.18965753, 0.22601156, 0.0, 0.0,
                    0.22793103, 0.31744186, 0.3302649, 0.10307927, 0.19688889, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
                ],
                index=pd.DatetimeIndex(
                    [
                        '2023-11-03 00:00:00', '2023-11-03 01:00:00', '2023-11-03 02:00:00', '2023-11-03 03:00:00',
                        '2023-11-03 04:00:00', '2023-11-03 05:00:00', '2023-11-03 06:00:00', '2023-11-03 07:00:00',
                        '2023-11-03 08:00:00', '2023-11-03 09:00:00', '2023-11-03 10:00:00', '2023-11-03 11:00:00',
                        '2023-11-03 12:00:00', '2023-11-03 13:00:00', '2023-11-03 14:00:00', '2023-11-03 15:00:00',
                        '2023-11-03 16:00:00', '2023-11-03 17:00:00', '2023-11-03 18:00:00', '2023-11-03 19:00:00',
                        '2023-11-03 20:00:00', '2023-11-03 21:00:00', '2023-11-03 22:00:00', '2023-11-03 23:00:00',
                    ], dtype='datetime64[ns]', name='date'),
                columns=['value'],
            ),
        },
        15: {
            'demand': 7.82,
            'inst_flow': pd.DataFrame(
                data=[
                    0.0, 0.0, 0.0, 0.0, 0.0, 0.35246862, 0.21365278, 0.19916667, 0.39752778, 0.33759722, 0.36438889,
                    0.35915278, 0.30420833, 0.34422222, 0.33279167, 0.32198611, 0.25970833, 0.3405, 0.27044444,
                    0.39830556, 0.32845833, 0.31006944, 0.30383333, 0.29100139,
                ],
                index=pd.DatetimeIndex(
                    [
                        '2023-11-03 00:00:00', '2023-11-03 01:00:00', '2023-11-03 02:00:00', '2023-11-03 03:00:00',
                        '2023-11-03 04:00:00', '2023-11-03 05:00:00', '2023-11-03 06:00:00', '2023-11-03 07:00:00',
                        '2023-11-03 08:00:00', '2023-11-03 09:00:00', '2023-11-03 10:00:00', '2023-11-03 11:00:00',
                        '2023-11-03 12:00:00', '2023-11-03 13:00:00', '2023-11-03 14:00:00', '2023-11-03 15:00:00',
                        '2023-11-03 16:00:00', '2023-11-03 17:00:00', '2023-11-03 18:00:00', '2023-11-03 19:00:00',
                        '2023-11-03 20:00:00', '2023-11-03 21:00:00', '2023-11-03 22:00:00', '2023-11-03 23:00:00',
                    ], dtype='datetime64[ns]', name='date'),
                columns=['value'],
            ),
        },
    },
}

scheme = DailyScheme(data)
scheme.get_scheme_ovrpdptw()
# scheme.save('./demo/data/daily_scheme')

# 结果
result = scheme.scheme
pprint(result)

real_veh_w_tank = [[scheme.tank_ids[i] for i in j] for j in scheme.veh_w_tank]

for i, j in enumerate(scheme.veh_sol):
    out_str = ''
    pre_node = None
    for k, node in enumerate(j[:-1]):
        if node != 0 and node != pre_node:
            out_str += f'{node}{scheme.ovrpdptw_tt[i][k]}[{real_veh_w_tank[i][k]}] --- '
            pre_node = node
    out_str += f'{j[-1]}{scheme.ovrpdptw_tt[i][-1]}[{real_veh_w_tank[i][-1]}]'
    print(out_str)
